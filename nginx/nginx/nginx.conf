user root;
worker_processes 1;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}


http {

    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    # ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    #include /etc/nginx/sites-enabled/*;
    client_max_body_size 20M;
    client_body_buffer_size 20M;

    upstream cloud {
        server cloud:8000;
    }
    
    upstream tags {
        server tags:8080;
    }
    
    server {
        listen 80;
        # listen 443 ssl;
        server_name life-course.online www.life-course.online 127.0.0.1 87.242.126.184;

        # TODO: I make it later, maybe...
        #ssl_certificate         /etc/ssl/fullchain.pem;
        #ssl_certificate_key     /etc/ssl/privkey.pem;
        #ssl_trusted_certificate /etc/ssl/chain.pem;


        location = /favicon.ico {
            access_log off; 
            log_not_found off; 
        }

        location /cloud/ {
            proxy_pass http://cloud/;
        }

        location /tags/ {
                if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'localhost, 127.0.0.1' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Content-Type, Accept, X-Requested-With' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                return 204;  # Return 204 No Content for OPTIONS
            }

            # Pass other requests to the backend
            proxy_pass http://tags/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Allow CORS for the actual requests
            add_header 'Access-Control-Allow-Origin' 'localhost, 127.0.0.1' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Content-Type, Accept, X-Requested-With' always;
            
        }
    }
}